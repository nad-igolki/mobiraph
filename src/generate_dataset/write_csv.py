from write_csv_funcs import *
from multiprocessing import Process

wsize = 15
nmatch = 12
scatter = False

number_of_graphs = 20000

def create_and_write_graphs(name, generating_func, dir_name, number_of_graphs, graph_id=0):
    labels = []
    file_edges = f'generated_graphs/{dir_name}/edges.csv'
    file_nodes = f'generated_graphs/{dir_name}/nodes.csv'

    file_for_sequences = f'generated_graphs/{dir_name}/sequences.fasta'

    create_edges_csv_start(filename=file_edges)
    create_nodes_csv_start(filename=file_nodes)

    for i in tqdm(range(number_of_graphs), desc=f"Generating {name} graphs"):
        features, matrix, sequence = generating_func(wsize=wsize, nmatch=nmatch, scatter=scatter)
        node_index_dic = append_nodes_to_csv(graph_id, features, matrix, filename=file_nodes)
        append_edges_to_csv(graph_id, matrix, node_index_dic, wsize=wsize, filename=file_edges)
        append_to_fasta(graph_id, sequence, file_for_sequences)
        graph_id += 1
    labels += [0] * number_of_graphs
    create_graph_labels_csv(labels, filename=f'generated_graphs/{dir_name}/graph_labels.csv')


if __name__ == '__main__':
    from multiprocessing import Manager

    manager = Manager()
    labels = manager.list()

    processes = []

    processes.append(Process(target=create_and_write_graphs, args=("LTR", generate_LTR, f"LTR_{number_of_graphs}", number_of_graphs)))
    processes.append(Process(target=create_and_write_graphs, args=("NO", generate_NO, f"NO_{number_of_graphs}", number_of_graphs)))
    processes.append(Process(target=create_and_write_graphs, args=("TIR", generate_TIR, f"TIR_{number_of_graphs}", number_of_graphs)))
    processes.append(Process(target=create_and_write_graphs, args=("INNER", generate_LTR, f"INNER_{number_of_graphs}", number_of_graphs)))

    for p in processes:
        p.start()

    for p in processes:
        p.join()


# Реальный пример
# from utils.fast_dot_plot_dna import dotplot
# helitron = "aaaaaaaatttgtttctaaaagattgattttttaagttttctatgtaatatttattggttagtattggtgaattgtaattttcaagaaaaatagttaattctcattggtttagagtagggatgtcaaaatgggtaacccaactcaactcataatcaaatgagtttaaggttaaatgagttatgggttgacccaactcattttgttaaataggttgggtctacctataactcatttaatatgggttaacccatttaaataataatttaattaattattattataaaaataataaattaataatgattcattatcatcaaacttaggatatttacggattccactttttacggatttacgtttttgacgagaaaatcatgggtttacgtttttggcgggaaaatctcgggtttacgtttttggcggaaaaatcacggatttacgtttttggcgggaaaatcacggatttacgtttttggcgggaaaatcacggttttttgttttttggcgggaaaattacgagttaacgtttttggcgggaaaattacgaatttacgtttttggcgggaaaatcacgggtttacgtttttggcgggaaaatcacaggatttacatttttggcgggaaaatcttgggtttacgtttttggcgagaaaatcttgggtttacgttttttgcaggaaaatcacgggtttacttttttggcgggaaaatcacgggtttatgttttttggtggaaaaattacgagtttactttttctcaatttcatcgattgtatatttaagaaatttggaaaaatattaattttattaaattggtttagatgtgttggttaaacttaaattgacattggtttagagattttagttggtttaattcaattttacaaaacttattgggttaattgggtaaaccattaaaaccattaaccattacaacccaactcattttactcatcaaaccaattgactcatcaactcatttgacccatcaactcatttgagtcaaaaattttaactcattagggttcatggattgagttgagttgagttgaccatgaattttgacccattttgacacccctagtttagagttatagaaaactgtaaaacactaaaaataatacatttataatcaacatttaatatgttttcttaatatgtgtgtttttctaaacaatcaaacaaaaatgaacggaggaa"
# helitron = helitron.upper()
# features, graph = dotplot(helitron, helitron, wsize=15, nmatch=12, scatter=True)


# line = 'gtgcgttttcagtatgagcgggttcaaaagagatgctatgagtgtcaacgtttgactcatgagagagatgtttgccctgtcctcataaaagcaagacaagatgctgctttggcaagacgctctggtaaaccagtggagagacctaagaaaccccctgttttgaaagaatcagaccctttgtttggggttttaagagaggatcaagttgggattgacaagttgacgggcagaccgagaatcgctgcagatgttttagaagggatgagacaatatcttttggtctctgatgaaactgagaagctgctgaggattaacaaggtgaaaaagtctgttggagaagtagagaaggatccagttctgagaaagtcaatgctgagtcatgaaccagcccctgtggttcatctggacttgtctaaagacaaaggagttttctttagctatgctgatgaagggattaacttgaggaatgttggaaaagtattagctcagcccaatctgcgtgaagagggtgggacttcaagttcttcacattcgtggaatttaaatcaggctggccctaatgcctttgatgtggatgccaattttcttgctttgtctcagccttttcaggataattcggcggtttttaaagctgggttctttgaacctagcttatccggaattaagcctaagaaagcaaaggcaagaaaaaggccaactaagaatcagaggaaagctaatcctttaccggcttcaggtcttgctgcatcacaagagttgaagaaaggtctcagtcatggtgctaaagagaaacgaaaggcagttgatgagggaactagcactgcaaaatccacaaaactcaatcccttagaggtgatcccaaaggggggattgcccaccgcgcaatgagcattatcagctggaattgtcaaggcttgggacggtctcaagacttggctttccctcgtcttaaggaattgcgtaaaaagtatttccctgagatgttgtttctgatggagactatgaatagtagagatgttcttgttgatttgcatacatttttaggttatgatagagtgtattctatagagcctgttggaaggtgtggtggtttagctatcttttggaaggaaagtgttaagatcgatatcaagtttgctgataagaatttgattgatcttcaagtgcagtttggtgcggtgaacttttttctgtcttgtgtgtatggtgaccccgactttaaaaaaagaaagattgtttgggaaagactaagcataattggagttggaaggagagaaagatggtgtatggtgggtgatttcaatgaaattctgcataatgaggaaaagattggtggcccgaagagatgtgagtcttactttaaacctttcaaggaaatgcatgaagcttgcgggatggtggagttggcgagtactggtaatagatttacttgggcagggagaaggtatgacttgtggatccagagcagattggatagagcttttggtaataaggaatggctgaagaatttccctgcttctaatcaacaatttttggagatgcgtggttctgatcatcgtcctgttttgcttaaactgatggcttctcaagattcttataaagggcagtttcggtttgacaaaaggcttctgcataagcctagagttgaggaaaccatcttgcagtcgtgggaccccctgaatgttgttaatgacctttgtgttagtgacagacttaagaagtgtagaggctctcagtgggtggaagagagataataatctgaactcccaagaaaacattcacaagattgaaaaagctctagaggaggaacaatcggctctttctccaaggttctatcaaattttctaccttaagaaggagcttgctaaggcgtactgggaggaagaggttttttggagtcaaaagagtagagaaacttggatgcattgtggtgatcgtaatactctgttctttcacaattctgtgaagaataatagggggaagaatcggattgacaaacttctggatatcaatggaagtgagcatttctctgatggtgctaaggggtgaggtagcgactgcttacttctccaacctgttcaaatcttctaatccttctggtttctctcactggtttgttgggttcgaagcaaaagtcattgatcagatgaatgagaggcttattcgtccagtttcttcagaggaaatcaaggatgctgttttctctatcgatccctctagtgctcctggctctgatggtatgtctggtctgttctttcaacattattgggcgatcgtgggagatcatgtgacaagagaggttaaaatggtctttcaaacaggtgtgatgcctactgaatggaattatactcacctctgtttgattccaaaggtaactcatccagttctcatgtctgatttaagacccatcagcctttgctcggttttatacaagattgtctctaaggttttggtcaagagattgaagcccctgttgtctctgattgtatctgatactcagactgcctttgtggctgagagacttatctccgacaatatcttggttgctcatgagattgttcatagtctgcatactatggataagtttgcgaaggagtatatggcggtcaaaactgacatgtctaaggcatacgacagagtcgagtggtgctatctgagagccctccttttagctttgggattccacctcacttgggtgaattggatgatgatgtgtgtttcctctgtcacctatgctgttctcattaatgacactccttttggtatgattatccctgagagagggcttagacaaggggatcctctctcaccttttctttttgtgatgtgcacagaagggctaactcatctcctgaatcgggctcaacttgttggtagtctttcaggtatccaattctcagaagccgatcatccatcacttactttttgcggatgacagcctttttatttgtaaggctaataaggatgaggttgtggttcttcaaagtattttgggagcttatggtgcagctacagggcagatcataaatctagcaaagtcctcgattacttttggttctaaggttgagactgtgaaaaaagctgaaattcagacttgtttgggaatttttaaagaaggagacgctagcacttatctgggattacctgagtgtttcagtggttccaagattgagatgttggattatatcaaggttagactaaagtccaaactgtccagctggttttctaaatctttgtctcagggtggaaaggaaattatgctcaaggctgtggcaatggcaatgccggtttttgccatgtcatgtttcaaattaccgaagactacttgcactaatctggccagtgctatggcagatttctggtggagcgctaatgatcatcaaaggaaaatacattggttgagctgggagaaattgtgtttacctaaggagcatggtggtcttgggtttagagatattggcctttttaatcaggcgcttttggcaaagcaggcttggagattgcttcagttcccggattgcctctttgcaagacttataaagagccgctattttcctgttggtgagtttttagatagtgatgtgggttctagaccttcctttggttggagaagcatccttcatgggagagatcttttgtgcagaggtcttgtaaaaagagttgggaatgggaagagtattagggtctggattgattattggcttgatgataatggactgagagctccctggattaaaaatccaatcatcaatgttgacctcctggtttctgaccttattgactatgagaaaagagattggagacttgataagttggaggagcagtttttcccggatgatgtagttaaaataagggagaatagaccggtggtgtctttagatgatttctggatttggaagcacaataagagtggtgactactcagtcaagttggggtattggttggcttctaatcaaaatttaggacaagtggctatagaggctatgatgcaaccgtctcttaatgacttgaagactcaggtttggaagcttcagactgaaccaaaaattaaggtttttctgtggaaagtgcttagtggggccattcctgtggtggatcttttgtcttatagaggaatgaagttggactctagatgtcaaacttgtggctgtgaaggggagtctattcagcatgttctttttagctgctcttttccaagacaagtgtgggcaatgtctaatatccatgtaccgttgttaggtttcgaatgtggctctgtttatgcaaatttataccattttttgataaacagagataacctcaagtggccggttgaacttagaagaagctttccttggatcatttggaggatttggaaaaacaggaatcttttcttttttgaaggaaaaagatttactgttcttgaaactatattgaaagtgaggaaagatgtggaggattggtttgctgctcaggttgtagaaaaagaaaggagggctgaagtgggtcaaagtgatcagcaggttttttcccctaggaatgtgtctcctgttgttagatggctgcctcctcctactgattgggtgaagtgtaatgttggtctgtcttggtctagaagaaatagacttgcaggggttgcttgggttttgaggaatgacagaggcaatgtcttgatgcacagtagaagagccttttccaatatttcctcctttttggaggctcaatttctaagcattgtttgggctgttgagagtatggttagtcatcatgtgaatagggtggtttttggtgtggaagctgcggtgcttgttggggtgataaacaggccgcaagcttggccttcctttaggtttcagtcttcggagatcttgttagctttaaatggtattgcagtttggaaagtggtgcttgaatcggtgtcttcgaatagaggtgctaatctcattgcccaaagtgttactaaggagtgtaggcttcaatcgtacgtggccgtaagttttcctgcttggcttcttggtgtctttagggatgagagagttctaacct'
# line = line.upper()
# features, graph = dotplot(line, line, wsize=15, nmatch=12, scatter=True)


# ltr = 'tatatattagaaatcatgaacaaagagaattgtagaatgattttctatttcctcgaagaataaatgtgttacaatgagagtatatatacaattactctaaaccatctaaaccaatgtacaatctctaaatagctaaaccaatctaatcaaactggaatactatatacaatctaatagcccccctcaagcttgagcttcataaatgttcagaagaccaagcttgctgttgttttcccggaaaggtttcggatatagaggtttggttagtgtgtcagcgagctgattatcagtcctgacaaatatcgtcttgagaattcctgcttcaatgcactctctgactttgtgacagtcattctcaatatgtttggttcgctcgtggaagacagaattattcgcaatatgtaaagcagcctcattatcacagtataagtatgcagggtgtgtgaaaggaatcttaaaagctgtgaggatgtatcccagccaaatgagctccttagtagcaacactcattgcacgatactcagcctcagctgaactcatagagaccacgtcttgcttcttcgagcgccaagaaaccagagaattacccacaaatatagcaaaaccagtaacacatcttctagtatcaggacaagtctgccaatctgaatctgagaaacctctcaagtcaaagtttgtatcagcgccataaaagagaccctgaccaatagtacctttcaagtatctcagaatcttgtgaagagcctgaagatgtatatcagttggagcagaagaatactgggcaagcttcgagacagcaaagttgatgtcaggccttgtcaagcagagatattgtaatttgccaagaattcgccgatactgtttaccatcttcaagtaaagttccagtatctttagagagcttctgattaggttccatggggatggaggagggtttgcaatcagagaaatcagaagaagccaacaagtcaagaacatactttcgttgacataaggatattccatctgcattcctggcgatctcaatcccaagaaagaattttggttctccaaggtctctcaactggaaaaaactactcagttgcgaagttagttcagcagatgcagcttctgtagtactcgcaataagtatatcgtcaacataaaccagaaccaccaaaaagaatccatcttgagctttcacaaatagagtatgatcaccatgacatttctcaaatccaagactaaccaaagtggttttaaacttgatgaaccactgtcgggaagcttatttgagaccataaatagatttgtgtaatctacacacagcattaggagagacttcctgaccttgtatttctgaatatccaggtggcagcttcatgtatatctcttcctcaaggtcaccattaagaagggcattagaaatgtcaagttgatgtaaataccatttcatctttggtgcaagtgaaagaagaaccttgactgtaaccattttagccacaggagagaaagtattaaagaagtcaatgccctcttgctgagtgtaacctttagctacaagacgcgccttatgacgttcaatacttccatctgctaagaatttgatagtgattatccatttgcaacctactgcaactttcccagcaggaagatcacatatgctccatgtacctgttctcacaaatgcactaatctcctttcccatagcatcattccatactttgtccagcctagcttcagaatatttttgaggtaattttgtggcggtgattatattaataaaagctccaaaaggctcagataaatatgaataagaaatataatttgttaatggataaggggaagttttagtagtagtaggagtattattatagcaatgaaagtcctgcaaatgggaaggcagttttctctgtcgagttgatttaggttcagaaggaacaaaaatcatggatgatgactcatcatgattgtgaggagcatcggaagatgattgcactagaggcagatgttcatcgttgtttggtgcagggagataaatatgaggaaagaagtcttttgcagcatccgtgatattagatgaagcaaaaggaaaaatatcctcataaaaaatgacatgtcgagaaatagaaactgagtatgtctctatatctaatagcttgtaccctttataacccatcggatagcctaaaaatatgcaagctttggctctaggatcaaacttagtcctagacttaggagaagtagaacaataacataaacacccaaaggctttaagactagagtaatctggttttcccttagttagtctttcataaggagtttcattatttataacaggtgagagtaatctattaataagaaacacagctgttaaaacacaatctccccaatattctaatggaattccagattgaaacataagagccctagcaacattcaacaggtgctgatgctttctctctactacaaaattttgttcaggagtttcaggacatggatgatcagctttaattccttctttagcaaataactcattaaattttaattcatgtgcattatcagacctaactgaacaaactttagtgtgatattgagtttctaccattttcaggaatgaaggaaaaacagtgagaacatcagatttctgtttaagtaaataaatccaagtagcacgactaaaatcatcaacaattgtcaagaaatacctataactatcaacagttggcacagaaaacggtccccaagtatctatatgaaccaattcaaaagctttttcacgaatgtgattcacagatttaaaaggtaaatgtttctgttttgataaatggcaaacatgacaatgagaagaatctttattaatcttttgtttaggtaacatcaaaacatcagaaagagtatcaatctttgcaaaagaagggtgacctaaacgtttatgccacatttcagattcattcttaacactagaacatacagacttaccaggaaaagacgacacatcaacaagacttttatccagattcagaatatataagttgccgacttgactacctttgccaagcatcaattccttggtaagagcctgaatcatacattcatcagatgtaaaactcactttagattgtaaagttttagttaaaacactaacactcaaaagattaaatttaaattcaggaataaacaaaacattgtgtaaagacaaagcatcagtgagttgaataaaaccagtgccctctattttaaccgtatggccattagggagtctaacaaaggttctatctaaggctttgtaagtgtggtataaattcctttcatgagtaacatgatgactagcccccgaatctataacccaagctctaagagacaactcagtttcaataggtatagaagaggttaacatttcataataagtagagtcatataaagaaaggaatgtaccagttatctgtgagatagaaggtacgggatttgaacttgaagctatagccttgtcaaaacatgaagtgatactaggggactggagcttagtgcttaagtatgagatcagttgttggatgtgatcattagacatagtctcatgtccagtggcagacatagtcggaggtgcctgagtctcaatctgatcagtactagccaagtttgtgcttccaacataagtgttctctttggctcgtggatgacctggaggatacccgtggactttgtagcacttgtccacagtgtggccaatccggttgcaatgagtacattttggtttcttgaagttaccttgagctagtagaatagtgttctgatcattgagaactccttgagtttgaaaagcagctggacttggacttggaactgattttgcagcaaacccaaccaaacgctgactttcatcttgatctagcatattgtagatttcattaagccctggtcgtggcttcatgttgaaaatttgactccgaatagtgttaaaatcatcactcaaacccatcaaaaattgtatcactcgacttgtctctgcctcttctagcagctccttcacttggtcacaatcacatttctttacactgcgagactttgtgttagcaagttgttcccacaaggtcttcttcttcgtaaagtatgtagagagatccagtttgccctgctgaagagtcatcacagcttgttcaagttgatacctcctaggcaaattgttcaccttaaaacgagtaaacaaatcaatccaatttcaacaccatcctcataatataagatactgtcataaatctccttgttcacaacattaagaatccatgacttcaccatactgttgcatctactccagatccgaaaagtagaatcatcaacagagggtcgcaacaaagaaccatcaacaaaacccagcttgtttttcgcatctaagctaattctcattgcaatcgaccaactgttatagttactaccatccagaatatgagctacaatagataaacctggatgatcggaggaatggaggagcagtgggttttcaccagagtcagaaaccttaaacccatttccaccataaacgtccgatcgttgagctagctgttgtttcagtgtcgtgagcttctgatcttcaaggattgctgcttcacgaacagatctgacagctgaaccttcatcatcaggtgtagaaccgcgagtcttcatttttcctcccttcttcaccatttttcttcaaatccaaggtcgcggaaagacaatcggagaagaaagaagatcagaaaaggtgtgattaagaagaaattgaagaaacgatggtgaaaatcaccagatttgtgtgaggaaatgctctgataccatattagaaatcatgaacaaagagaattgtagaatgattttctatttcctcgaagaataaatgtgttacaatgagagtatatatacaattactctaaaccatctaaaccaatgtacaatctctaaatagctaaaccaatctaatcaaaccggaatactatatacaatctaat'
# ltr = ltr.upper()
# features, graph = dotplot(ltr, ltr, wsize=15, nmatch=12, scatter=True)
